# DirectDriveX Development Environment Configuration
# Copy this file to .env and fill in your actual values
# SECURITY WARNING: Never commit actual credentials to version control!

# ===== ENVIRONMENT CONFIGURATION =====
ENVIRONMENT=development

# ===== DATABASE CONFIGURATION =====
# Local MongoDB (RECOMMENDED for development)
MONGODB_URI=mongodb://localhost:27017/directdrive
DATABASE_NAME=directdrive

# Alternative: MongoDB Atlas for development (if needed)
# MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/database_name?retryWrites=true&w=majority&appName=AppName
# DATABASE_NAME=your_dev_database_name_here

# ===== SECURITY CONFIGURATION =====
# CRITICAL: Generate a secure JWT secret key (minimum 32 characters)
# Use this command to generate a secure secret:
# python -c "from app.core.config import Settings; Settings.print_secure_secret_example()"
JWT_SECRET_KEY=your_development_jwt_secret_key_here_minimum_32_characters
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440

# ===== REDIS CONFIGURATION =====
REDIS_URL=redis://localhost:6379
CELERY_BROKER_URL=redis://localhost:6379/0

# ===== EMAIL CONFIGURATION =====
# Primary SMTP Configuration (Brevo for development)
SMTP_HOST=smtp-relay.brevo.com
SMTP_PORT=587
SMTP_USERNAME=your_smtp_username_here
SMTP_PASSWORD=your_smtp_password_here
SMTP_USE_TLS=true
FROM_EMAIL=your_from_email@yourdomain.com
FROM_NAME=DirectDrive System

# Alternative: Gmail SMTP Configuration for testing
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your_test_email@gmail.com
# SMTP_PASSWORD=your_app_password_here
# SMTP_USE_TLS=True
# FROM_EMAIL=your_test_email@gmail.com
# FROM_NAME=DirectDrive System

# ===== PASSWORD RESET CONFIGURATION =====
PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=30
FRONTEND_URL=http://localhost:4200

# ===== GOOGLE OAUTH CONFIGURATION =====
GOOGLE_OAUTH_CLIENT_ID=your_google_oauth_client_id.apps.googleusercontent.com
GOOGLE_OAUTH_CLIENT_SECRET=your_google_oauth_client_secret
GOOGLE_OAUTH_REDIRECT_URI=http://localhost:4200/auth/google/callback

# ===== GOOGLE DRIVE CONFIGURATION =====
# Multiple Google Drive Accounts for Development Testing

# Account 1
GDRIVE_ACCOUNT_1_CLIENT_ID=your_google_drive_client_id_1_here
GDRIVE_ACCOUNT_1_CLIENT_SECRET=your_google_drive_client_secret_1_here
GDRIVE_ACCOUNT_1_REFRESH_TOKEN=your_refresh_token_1_here
GDRIVE_ACCOUNT_1_FOLDER_ID=your_folder_id_1_here

# Account 2
GDRIVE_ACCOUNT_2_CLIENT_ID=your_google_drive_client_id_2_here
GDRIVE_ACCOUNT_2_CLIENT_SECRET=your_google_drive_client_secret_2_here
GDRIVE_ACCOUNT_2_REFRESH_TOKEN=your_refresh_token_2_here
GDRIVE_ACCOUNT_2_FOLDER_ID=your_folder_id_2_here

# Account 3
GDRIVE_ACCOUNT_3_CLIENT_ID=your_google_drive_client_id_3_here
GDRIVE_ACCOUNT_3_CLIENT_SECRET=your_google_drive_client_secret_3_here
GDRIVE_ACCOUNT_3_REFRESH_TOKEN=your_refresh_token_3_here
GDRIVE_ACCOUNT_3_FOLDER_ID=your_folder_id_3_here

# ===== HETZNER CONFIGURATION =====
HETZNER_WEBDAV_URL=https://your-storagebox.your-storagebox.de
HETZNER_USERNAME=your_hetzner_username_here
HETZNER_PASSWORD=your_hetzner_password_here

# ===== TELEGRAM CONFIGURATION =====
# Uncomment and add your Telegram bot credentials for testing
# TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
# TELEGRAM_CHANNEL_ID=your_telegram_channel_id_here

# ===== ADMIN CONFIGURATION =====
ADMIN_WEBSOCKET_TOKEN=your_development_admin_websocket_token_here

# ===== PARALLEL UPLOAD SYSTEM CONFIGURATION =====
# Enable/disable parallel upload system for development testing
ENABLE_PARALLEL_UPLOADS=True

# Chunk size configuration (in MB) - smaller for development
PARALLEL_UPLOAD_CHUNK_SIZE_MB=8

# Concurrency limits - lower for development
PARALLEL_UPLOAD_MAX_CONCURRENT_CHUNKS=4
PARALLEL_UPLOAD_MAX_CONCURRENT_USERS=5
ENABLE_UPLOAD_LIMITS=false

# Memory Limits by Environment
PARALLEL_UPLOAD_MAX_MEMORY_PERCENT_DEV=100.0     # Development: 100%
PARALLEL_UPLOAD_MAX_MEMORY_PERCENT_STAGING=85.0  # Staging: 85%
PARALLEL_UPLOAD_MAX_MEMORY_PERCENT_PROD=80.0     # Production: 80%

# Buffer pool configuration - smaller for development
BUFFER_POOL_MAX_BUFFERS=20
BUFFER_POOL_DEFAULT_SIZE_MB=8
BUFFER_POOL_MAX_SIZE_MB=16

# HTTP client configuration - lower limits for development
HTTP_MAX_CONNECTIONS=20
HTTP_KEEPALIVE_CONNECTIONS=10
HTTP_KEEPALIVE_EXPIRY=30

# Enable detailed logging for parallel uploads in development
PARALLEL_UPLOAD_DEBUG_LOGGING=True

# Memory monitoring interval (seconds)
MEMORY_MONITOR_INTERVAL=5

# Progress update frequency (seconds)
PROGRESS_UPDATE_INTERVAL=1

# Fallback to sequential upload if parallel fails
PARALLEL_UPLOAD_FALLBACK_TO_SEQUENTIAL=True

# Graceful degradation threshold (failed chunks percentage)
PARALLEL_UPLOAD_FAILURE_THRESHOLD=10.0

# ===== STREAMING UPLOAD CONFIGURATION =====
ENABLE_STREAMING_UPLOADS=true
STREAMING_UPLOAD_PERCENTAGE=10
STREAMING_CHUNK_SIZE_MB=2

# ===== CORS CONFIGURATION =====
# Development: Allow localhost origins for frontend development
ALLOWED_ORIGINS=http://localhost:5000,http://localhost:4200,http://127.0.0.1:5000,http://127.0.0.1:4200
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
CORS_ALLOW_HEADERS=*

# Debug mode - allows less strict CORS validation
DEBUG=true

# ===== MONGODB SECURITY CONFIGURATION =====
# Security validation settings for MongoDB connections
MONGODB_SECURITY_VALIDATION_ENABLED=true
MONGODB_REQUIRE_AUTH_IN_PRODUCTION=true
MONGODB_REQUIRE_SSL_IN_PRODUCTION=true
MONGODB_LOG_CONNECTION_ATTEMPTS=true

# Development-specific MongoDB settings
MONGODB_CONNECTION_TIMEOUT_MS=10000
MONGODB_SERVER_SELECTION_TIMEOUT_MS=5000
MONGODB_LOG_FAILED_AUTH_ATTEMPTS=true
MONGODB_MAX_CONNECTION_ATTEMPTS=5

# MongoDB Connection Examples (for reference):
# 
# Local development (current - no auth needed):
# MONGODB_URI=mongodb://localhost:27017/directdrive
#
# Development with authentication (optional):  
# MONGODB_URI=mongodb://devuser:devpass@localhost:27017/directdrive?authSource=admin
#
# Development with SSL (recommended for testing):
# MONGODB_URI=mongodb://devuser:devpass@localhost:27017/directdrive?ssl=true&authSource=admin
#
# MongoDB Atlas for development (if needed):
# MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/database_name?retryWrites=true&w=majority&appName=AppName

# ===== DEVELOPMENT SECURITY SETTINGS =====
# File size limits for development (more permissive)
MAX_FILE_SIZE_MB=1000
MAX_BATCH_UPLOAD_SIZE_MB=100
FILE_SIZE_VALIDATION_ENABLED=true
MAX_FILENAME_LENGTH=255
FILE_CONTENT_VALIDATION_ENABLED=true

# Security headers (less strict for development)
SECURITY_HEADERS_ENABLED=true
CSP_REPORT_ONLY=true
X_FRAME_OPTIONS=SAMEORIGIN
SECURITY_HEADERS_FORCE_HTTPS=false

# Development security settings
SECURITY_LOG_LEVEL=DEBUG
SECURITY_MONITORING_ENABLED=true
BASIC_RATE_LIMIT_ENABLED=true
BASIC_RATE_LIMIT_REQUESTS_PER_MINUTE=120

# File upload security (relaxed for development)
UPLOAD_QUARANTINE_ENABLED=false
MALWARE_SCANNING_ENABLED=false
STRICT_CONTENT_TYPE_VALIDATION=false
ALLOWED_CONTENT_TYPES=*

# Session security (less strict for development)
SESSION_SECURE=false
SESSION_HTTPONLY=true
SESSION_SAMESITE=Lax

# API settings
API_VERSION=v1
API_DEPRECATION_WARNINGS=true

# Error handling (more verbose for development)
EXPOSE_ERROR_DETAILS=true
ENABLE_DEBUG_MODE=true

# ===== DEVELOPMENT OVERRIDES =====
# These settings are optimized for development
DEBUG=true
LOG_LEVEL=DEBUG
CACHE_TTL=60
RATE_LIMIT_ENABLED=False

# ===== DEVELOPMENT CHECKLIST =====
# Before starting development, ensure:
# ✅ MongoDB is running locally (or configure MongoDB Atlas)
# ✅ Redis is running locally for Celery
# ✅ JWT secret key is set (can be any random string for dev)
# ✅ Google Drive credentials are configured for testing
# ✅ Email SMTP settings are configured for testing
# ✅ Frontend URL matches your development setup
# ✅ CORS origins include your development URLs
# ✅ Debug mode is enabled for detailed logging
# ✅ Parallel uploads are configured for testing
# ✅ Admin websocket token is set for testing
# ✅ All external service credentials are properly configured

# ===== QUICK START GUIDE =====
# 1. Copy this file to .env
# 2. Start MongoDB: mongod
# 3. Start Redis: redis-server
# 4. Install dependencies: pip install -r requirements.txt
# 5. Run the application: python -m uvicorn app.main:app --reload
# 6. Access the API at: http://localhost:5000
# 7. Access the frontend at: http://localhost:4200
